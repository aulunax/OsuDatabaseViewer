using System.Diagnostics;
using System.Text;
using System.Text.Json;
using System.Xml;
using System.Xml.Serialization;
using OsuDatabaseControl.DataTypes;

namespace OsuDatabaseControl.IO.Writers;

public class FullScoresWriter
{
    public static bool WriteToJSON(IEnumerable<FullScore> scores, string path)
    {

        try
        {
            string jsonString = JsonSerializer.Serialize(scores);
            File.WriteAllText(path, jsonString);
        }
        catch (Exception e)
        {
            Debug.WriteLine($"Exception occured in FullScoresWriter in WriteToJSON(): {e.Message}");
            return false;
        }
        return true;

    }

    public static bool WriteToXML(IEnumerable<FullScore> scores, string path)
    {
        try
        {
            XmlSerializer serializer = new XmlSerializer(typeof(FullScore));
            using (TextWriter writer = new StreamWriter(path))
            {
                serializer.Serialize(writer, scores);
            }
        }
        catch (Exception e)
        {
            Debug.WriteLine($"Exception occured in FullScoresWriter in WriteToXML(): {e.Message}");
            return false;
        }
        return true;
    }

    public static bool WriteToText(IEnumerable<FullScore> scores, string path)
    {
        try
        {
            File.WriteAllText(path, "File generated by OsuDatabaseViewer\n\n");
            foreach (var score in scores)
            {
                File.AppendAllText(path, score.ToString() + "\n\n");
            }
        }
        catch (Exception e)
        {
            Debug.WriteLine($"Exception occured in FullScoresWriter in WriteToText(): {e.Message}");
            return false;
        }

        return true;
    }
}
<Window x:Class="OsuDatabaseView.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OsuDatabaseView.MainWindow"
        xmlns:convert="clr-namespace:OsuDatabaseView.Utils.Converters"
        xmlns:menu="clr-namespace:OsuDatabaseView.MainWindow.UserControls.Menu"
        xmlns:scoreinfo="clr-namespace:OsuDatabaseView.MainWindow.UserControls.ScoreInfo"
        xmlns:custom="clr-namespace:OsuDatabaseView.MainWindow.Custom"
        mc:Ignorable="d"
        Title="Osu! Database Manager" Height="600" Width="1280">

    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>

    
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindowCommands.FocusSearchBox}" 
                        Executed="FocusSearchBoxExecuted"/>
    </Window.CommandBindings>

    <Window.Resources>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <!-- Style that highlights the row that is currently being hovered over  -->
        
        <!-- <Style TargetType="DataGridRow"> -->
        <!--     <Style.Resources> -->
        <!--         <Storyboard x:Key="MouseEnterRowStoryboard"> -->
        <!--             <ColorAnimation To="LightBlue" Duration="0:0:0.1" -->
        <!--                             Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)" /> -->
        <!--         </Storyboard> -->
        <!--         <Storyboard x:Key="MouseLeaveRowStoryboard"> -->
        <!--             <ColorAnimation To="White" Duration="0:0:0.1" -->
        <!--                             Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)" /> -->
        <!--         </Storyboard> -->
        <!--     </Style.Resources> -->
        <!--     <Style.Triggers> -->
        <!--         <Trigger Property="IsMouseOver" Value="True"> -->
        <!--             <Trigger.EnterActions> -->
        <!--                 <BeginStoryboard Storyboard="{StaticResource MouseEnterRowStoryboard}" /> -->
        <!--             </Trigger.EnterActions> -->
        <!--             <Trigger.ExitActions> -->
        <!--                 <BeginStoryboard Storyboard="{StaticResource MouseLeaveRowStoryboard}" /> -->
        <!--             </Trigger.ExitActions> -->
        <!--         </Trigger> -->
        <!--     </Style.Triggers> -->
        <!-- </Style> -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="FontSize" Value="13" />
            <Style.Triggers>
                <Trigger Property="ClickMode" Value="Press"></Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScoreDataGridStyle" TargetType="DataGrid">
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="ColumnWidth" Value="SizeToHeader" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="GridLinesVisibility" Value="None" />
        </Style>
        <Style TargetType="ToolTip">
            <Setter Property="Padding" Value="3,1,3,1" />
        </Style>
        <convert:ModsToStringConverter x:Key="ModsToStringConverter" />
        <convert:BooleanToToolTipConverter x:Key="BooleanToToolTipConverter" />
    </Window.Resources>
    <DockPanel>
        <menu:MenuView x:Name="menuView" DockPanel.Dock="Top" />
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0" Background="#FFF0F0F0">
            <Label Content="Search: " VerticalAlignment="Center" />
            <TextBox Text="{Binding SearchBoxQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     x:Name="SearchBox" Width="200" Height="20" Margin="5"
                     HorizontalAlignment="Left" VerticalAlignment="Center">
                <!-- <i:Interaction.Triggers> -->
                <!--     <i:EventTrigger EventName="KeyUp"> -->
                <!--         <i:InvokeCommandAction Command="{Binding UpdateFilteredScoresCommand}" /> -->
                <!--     </i:EventTrigger> -->
                <!-- </i:Interaction.Triggers> -->
            </TextBox>
            <TextBlock VerticalAlignment="Center">
                <Run Text="Currently displaying"></Run>
                <Run Text="{Binding TotalNumberOfDisplayedScores}"></Run>
                <Run> scores</Run>
            </TextBlock>
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <!-- Workaround framework element for changing visibility of DataGrid columns -->
            <FrameworkElement x:Name="dummyElement" Visibility="Collapsed"/>
            <DataGrid x:Name="scoreDataGrid" Grid.Column="0" ItemsSource="{Binding FilteredScores}"
                      Style="{StaticResource ScoreDataGridStyle}"
                      SelectedItem="{Binding SelectedScoreInfo, Mode=TwoWay}">

                <DataGrid.Resources>
                    <ContextMenu x:Key="ScoreContextMenu">
                        <ContextMenu.Items>
                            <MenuItem
                                Header="Show only this beatmapset"
                                Command="{Binding DataContext.ShowSelectedBeatmapsetCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=Self}}"/>
                            <MenuItem
                                Header="Show only this beatmap difficulty"
                                Command="{Binding DataContext.ShowSelectedBeatmapDifficultyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=Self}}"/>
                            <MenuItem
                                Header="Open beatmap folder"
                                Command="{Binding DataContext.OpenBeatmapFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=Self}}"/>
                            <MenuItem
                                Header="Open .osu file in notepad"
                                Command="{Binding DataContext.OpenBeatmapInNotepadCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=Self}}"/>
                        </ContextMenu.Items>
                    </ContextMenu>
                    <ContextMenu x:Key="DataGridColumnContextMenu">
                        <ContextMenu.Items>
                            <MenuItem
                                Header="Hide column"
                                Command="{Binding DataContext.ChangeVisibilityCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                                CommandParameter="{Binding Column.(custom:ScoreDataGridColumn.VisibilityParameter), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}"/>
                        </ContextMenu.Items>
                    </ContextMenu>
                    <DataTemplate x:Key="ComboColumnTemplate">
                        <TextBlock Text="{Binding MaxCombo}"
                                   ToolTip="{Binding Perfect, Converter={StaticResource BooleanToToolTipConverter}}"
                                   ToolTipService.InitialShowDelay="100">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Perfect}" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="ContextMenu" Value="{StaticResource ScoreContextMenu}" />
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <custom:ScoreDataGridColumn Header="Mode" Binding="{Binding PlayMode}"
                                                VisibilityParameter="Mode" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Artist" Binding="{Binding ArtistName}" MinWidth="100"
                                        VisibilityParameter="Artist" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Title" Binding="{Binding SongTitle}" MinWidth="100"
                                                VisibilityParameter="Title" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Difficulty" Binding="{Binding DifficultyName}" MinWidth="100"
                                                VisibilityParameter="Difficulty" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Creator Name" Binding="{Binding CreatorName}"
                                                VisibilityParameter="Creator" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Stars" Binding="{Binding StarRating, 
                                                    Converter={StaticResource RoundedFloat}}"
                                                VisibilityParameter="Stars" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Mods" Binding="{Binding Mods, 
                                                    Converter={StaticResource ModsToStringConverter}}"
                                                SortMemberPath="Mods" Width="Auto"
                                                VisibilityParameter="Mods" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Accuracy" Binding="{Binding Accuracy, 
                                                    Converter={StaticResource FloatingPointToPercentConverter}}"
                                                VisibilityParameter="Accuracy" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="C300" Binding="{Binding C300}"
                                                VisibilityParameter="C300" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="C100" Binding="{Binding C100}"
                                                VisibilityParameter="C100" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="C50" Binding="{Binding C50}"
                                                VisibilityParameter="C50" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Miss" Binding="{Binding Miss}"
                                                VisibilityParameter="Miss" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Score" Binding="{Binding TotalScore}" MinWidth="60"
                                                VisibilityParameter="Score" SourceParameter="{x:Reference dummyElement}"/>
                    <DataGridTemplateColumn Header="Combo" SortMemberPath="MaxCombo"
                                            CellTemplate="{StaticResource ComboColumnTemplate}"
                                            Visibility="{Binding DataContext.MainColumnVisibility, 
                                                Converter={StaticResource MainColumnVisibilityConverter}, 
                                                ConverterParameter=Combo, 
                                                Source={x:Reference dummyElement}}" />
                    <custom:ScoreDataGridColumn Header="Date" Binding="{Binding Date, Converter={StaticResource DateToLocalTimezone}}" Width="Auto"
                                                VisibilityParameter="Date" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="BPM" Width="Auto" Binding="{Binding BPM, 
                                                    Converter={StaticResource RoundedFloat}}"
                                                VisibilityParameter="BPM" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="AR" Binding="{Binding ApproachRate, Converter={StaticResource RoundedFloat}}" Width="Auto"
                                                VisibilityParameter="AR" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="OD" Binding="{Binding OverallDifficulty, Converter={StaticResource RoundedFloat}}" Width="Auto"
                                                VisibilityParameter="OD" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="CS" Binding="{Binding CircleSize, Converter={StaticResource RoundedFloat}}" Width="Auto"
                                                VisibilityParameter="CS" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="HP" Binding="{Binding HPDrain, Converter={StaticResource RoundedFloat}}" Width="Auto"
                                                VisibilityParameter="HP" SourceParameter="{x:Reference dummyElement}"/>
                    <custom:ScoreDataGridColumn Header="Length" Binding="{Binding TotalTime, Converter={StaticResource RoundedFloat}}" Width="Auto"
                                                VisibilityParameter="Length" SourceParameter="{x:Reference dummyElement}"/>
                </DataGrid.Columns>
            </DataGrid>
            <GridSplitter Grid.Column="1" Width="5"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Gray"
                          ResizeBehavior="PreviousAndNext"
                          IsEnabled="False"
                          Visibility="{Binding IsSideScoreInfoVisible, 
                          Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Grid Grid.Column="2"
                  Visibility="{Binding IsSideScoreInfoVisible, 
                          Converter={StaticResource BooleanToVisibilityConverter}}">
                <scoreinfo:ScoreInfoView x:Name="scoreInfoView" />
            </Grid>
        </Grid>
    </DockPanel>
</Window>